[{"path":"https://mcodrescu.github.io/octopus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 octopus authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mcodrescu.github.io/octopus/articles/octopus.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Get Started","text":"Analytic databases industry standard maintaining large data sets. data practitioner, essential interact databases. octopus package aims default tool interacting managing databases.","code":""},{"path":"https://mcodrescu.github.io/octopus/articles/octopus.html","id":"multilingual-support","dir":"Articles","previous_headings":"","what":"Multilingual Support","title":"Get Started","text":"One important goals octopus package multilingual support various databases. name octopus analogizes many arms octopus many compatible connection types package. hood, octopus package starts shiny application receives input browser. takes input translates specific SQL dialect database working . Take, example, following two ways querying data table. Postgres, specify exact table name using quotations. However, MySQL specify exact table name using back ticks. Subtle differences like can annoying remember, can simply click View button octopus interface get preview table regardless SQL dialect. list currently supported databases.","code":"SELECT * FROM \"public\".\"mtcars\" SELECT * FROM `public`.`mtcars` octopus::list_drivers() #> [1] \"PqConnection\"         \"Snowflake\"            \"Vertica Database\"     #> [4] \"duckdb_connection\"    \"MySQLConnection\"      \"SQLiteConnection\"     #> [7] \"Microsoft SQL Server\""},{"path":"https://mcodrescu.github.io/octopus/articles/octopus.html","id":"comparison-to-dbi","dir":"Articles","previous_headings":"","what":"Comparison to DBI","title":"Get Started","text":"Let’s demonstrate explore database using DBI package alone versus using octopus package. Let’s begin connecting MySQL database want explore. can list tables available database using DBI::dbListTables(). see details table can use DBI::dbReadTable() read entire table R session. Using approach works fine single table, want view many tables, even different schemas? need copy paste code change table name time. Rewriting code repeatedly becomes tedious; especially don’t know exactly data database need.","code":"con <- DBI::dbConnect(   RMySQL::MySQL(),   host = \"localhost\",   user = \"sakila\",   password = \"p_ssW0rd\",   dbname = \"sakila\",   port = 3306 ) DBI::dbListTables(con) #  [1] \"actor\"                      \"actor_info\"                 #  [3] \"address\"                    \"category\"                   #  [5] \"city\"                       \"country\"                    #  [7] \"customer\"                   \"customer_list\"              #  [9] \"film\"                       \"film_actor\"                 # [11] \"film_category\"              \"film_list\"                  # [13] \"film_text\"                  \"inventory\"                  # [15] \"language\"                   \"nicer_but_slower_film_list\" # [17] \"payment\"                    \"rental\"                     # [19] \"sales_by_film_category\"     \"sales_by_store\"             # [21] \"staff\"                      \"staff_list\"                 # [23] \"store\" DBI::dbReadTable(con, \"actor\") |> head() #   actor_id first_name    last_name         last_update # 1        1   PENELOPE      GUINESS 2006-02-15 04:34:33 # 2        2       NICK     WAHLBERG 2006-02-15 04:34:33 # 3        3         ED        CHASE 2006-02-15 04:34:33 # 4        4   JENNIFER        DAVIS 2006-02-15 04:34:33 # 5        5     JOHNNY LOLLOBRIGIDA 2006-02-15 04:34:33 # 6        6      BETTE    NICHOLSON 2006-02-15 04:34:33"},{"path":"https://mcodrescu.github.io/octopus/articles/octopus.html","id":"octopus-approach","dir":"Articles","previous_headings":"","what":"Octopus Approach","title":"Get Started","text":"Let’s try different approach. Let’s use octopus interact database application interface.    Now can easily scroll different tables database preview using View button. also know exactly many rows table without bring data R session.","code":"# Start the octopus app octopus::view_database(con)"},{"path":"https://mcodrescu.github.io/octopus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcus Codrescu. Author, maintainer.","code":""},{"path":"https://mcodrescu.github.io/octopus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Codrescu M (2023). octopus: Database Management Tool. https://github.com/MCodrescu/octopus, https://mcodrescu.github.io/octopus/.","code":"@Manual{,   title = {octopus: A Database Management Tool},   author = {Marcus Codrescu},   year = {2023},   note = {https://github.com/MCodrescu/octopus, https://mcodrescu.github.io/octopus/}, }"},{"path":"https://mcodrescu.github.io/octopus/index.html","id":"octopus-","dir":"","previous_headings":"","what":"A Database Management Tool","title":"A Database Management Tool","text":"octopus package database management tool built entirely R. can preview tables, upload files, send queries, . database credentials handled R user. Simply pass supported database connection object created DBI::dbConnect() function octopus::view_database() octopus start shiny application allowing interact database. Try ! shinyapps.io","code":""},{"path":"https://mcodrescu.github.io/octopus/index.html","id":"supported-databases","dir":"","previous_headings":"","what":"Supported Databases","title":"A Database Management Tool","text":"octopus package currently supports following databases:","code":"octopus::list_drivers() #> [1] \"PqConnection\"         \"Snowflake\"            \"Vertica Database\"     #> [4] \"duckdb_connection\"    \"MySQLConnection\"      \"SQLiteConnection\"     #> [7] \"Microsoft SQL Server\""},{"path":"https://mcodrescu.github.io/octopus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Database Management Tool","text":"Install stable version CRAN. Install development version github.","code":"install.packages(\"octopus\") devtools::install_github(\"MCodrescu/octopus\")"},{"path":"https://mcodrescu.github.io/octopus/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Database Management Tool","text":"example connecting database running main function octopus.","code":"# Create a Database Connection drv <- duckdb::duckdb() con <- DBI::dbConnect(drv)  # Write some data DBI::dbWriteTable(con, \"mtcars\", mtcars)  # View the Database octopus::view_database(con)"},{"path":"https://mcodrescu.github.io/octopus/reference/list_drivers.html","id":null,"dir":"Reference","previous_headings":"","what":"List Compatible Database Drivers — list_drivers","title":"List Compatible Database Drivers — list_drivers","text":"List Compatible Database Drivers","code":""},{"path":"https://mcodrescu.github.io/octopus/reference/list_drivers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Compatible Database Drivers — list_drivers","text":"","code":"list_drivers()"},{"path":"https://mcodrescu.github.io/octopus/reference/list_drivers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Compatible Database Drivers — list_drivers","text":"character vector compatible database drivers.","code":""},{"path":"https://mcodrescu.github.io/octopus/reference/view_database.html","id":null,"dir":"Reference","previous_headings":"","what":"View Database Connection with Octopus — view_database","title":"View Database Connection with Octopus — view_database","text":"function opens shiny instance database can   viewed.","code":""},{"path":"https://mcodrescu.github.io/octopus/reference/view_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View Database Connection with Octopus — view_database","text":"","code":"view_database(con, options = list())"},{"path":"https://mcodrescu.github.io/octopus/reference/view_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View Database Connection with Octopus — view_database","text":"con database connection object. result DBI::dbConnect(). options named list options passed along shinyApp().","code":""},{"path":"https://mcodrescu.github.io/octopus/reference/view_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View Database Connection with Octopus — view_database","text":"R Shiny instance.","code":""},{"path":"https://mcodrescu.github.io/octopus/news/index.html","id":"octopus-030","dir":"Changelog","previous_headings":"","what":"octopus 0.3.0","title":"octopus 0.3.0","text":"Added helpful loading notifications Added faster row counts Snowflake Table select remembers selected table query submitted","code":""},{"path":"https://mcodrescu.github.io/octopus/news/index.html","id":"octopus-020","dir":"Changelog","previous_headings":"","what":"octopus 0.2.0","title":"octopus 0.2.0","text":"CRAN release: 2023-04-12 Added support Microsoft SQL Server Database Added support hot key commands run queries (ctr+shift+enter) Minor bug fixes","code":""}]
